# Input
# Plundered from ../../good-test-files/bell.quil
H 0
CNOT 0 1

# Output
H 0
CNOT 0 1

# Input
# Plundered from ../../good-test-files/empty-quil.quil

# Output

# Input
# Plundered from ../../good-test-files/good-classical-binaries.quil
# test parsing all classical binary instructions

DECLARE ro BIT[4]
DECLARE oct OCTET
DECLARE x REAL[2]

AND ro[0] ro[1]
XOR ro[1] ro[2]
IOR ro[2] ro[3]

EQ ro[0] ro[1] ro[2]
LE ro[0] ro[1] ro[2]
LT ro[0] ro[1] ro[2]
GE ro[0] ro[1] ro[2]
GT ro[0] ro[1] ro[2]

EQ ro[0] oct 1
LE ro[0] oct 2
LT ro[0] oct 3
GE ro[0] oct 4
GT ro[0] oct 5

EQ ro[0] x 1.1
LE ro[0] x 2.2
LT ro[0] x 3.3
GE ro[0] x 4.4
GT ro[0] x 5.5

ADD x[0] x[1]
SUB x[0] x[1]
MUL x[0] x[1]
DIV x[0] x[1]


# Output
DECLARE ro BIT[4]
DECLARE oct OCTET
DECLARE x REAL[2]

AND ro[0] ro[1]
XOR ro[1] ro[2]
IOR ro[2] ro[3]
EQ ro[0] ro[1] ro[2]
LE ro[0] ro[1] ro[2]
LT ro[0] ro[1] ro[2]
GE ro[0] ro[1] ro[2]
GT ro[0] ro[1] ro[2]
EQ ro[0] oct[0] 1
LE ro[0] oct[0] 2
LT ro[0] oct[0] 3
GE ro[0] oct[0] 4
GT ro[0] oct[0] 5
EQ ro[0] x[0] 1.1
LE ro[0] x[0] 2.2
LT ro[0] x[0] 3.3
GE ro[0] x[0] 4.4
GT ro[0] x[0] 5.5
ADD x[0] x[1]
SUB x[0] x[1]
MUL x[0] x[1]
DIV x[0] x[1]

# Input
# Plundered from ../../good-test-files/good-classical-in-defcircuit.quil
# classical instructions in defcircuit

DECLARE ro BIT[2]

DEFCIRCUIT TEST a b:
    NOT a
    AND a b
    IOR a b
    MOVE a b
    EXCHANGE a b

TEST ro[0] ro[1]

# Output
DECLARE ro BIT[2]

DEFCIRCUIT TEST a b:
    NOT a
    AND a b
    IOR a b
    MOVE a b
    EXCHANGE a b

NOT ro[0]
AND ro[0] ro[1]
IOR ro[0] ro[1]
MOVE ro[0] ro[1]
EXCHANGE ro[0] ro[1]

# Input
# Plundered from ../../good-test-files/good-classical-load-store.quil
# test parsing good LOAD and STORE

DECLARE ro BIT[4]
DECLARE oct OCTET
DECLARE x REAL[2]
DECLARE int INTEGER
DECLARE ri INTEGER[2]

LOAD x x int
LOAD ro ro int

STORE ro int ro
STORE ro int ro[2]
STORE x int x
STORE ri int int
STORE x int 1.1
STORE ri int 2

# Output
DECLARE ro BIT[4]
DECLARE oct OCTET
DECLARE x REAL[2]
DECLARE int INTEGER
DECLARE ri INTEGER[2]

LOAD x[0] x int[0]
LOAD ro[0] ro int[0]
STORE ro int[0] ro[0]
STORE ro int[0] ro[2]
STORE x int[0] x[0]
STORE ri int[0] int[0]
STORE x int[0] 1.1
STORE ri int[0] 2

# Input
# Plundered from ../../good-test-files/good-classical-unaries.quil
# test parsing all classical unaries

DECLARE ro BIT[4]
DECLARE angle REAL

NOT ro[3]
NEG angle[0]

# Output
DECLARE ro BIT[4]
DECLARE angle REAL

NOT ro[3]
NEG angle[0]

# Input
# Plundered from ../../good-test-files/good-control-flow.quil
DECLARE ro BIT[2]

LABEL @START
JUMP @MID
LABEL @MID
JUMP-WHEN @MID ro[0]
JUMP-UNLESS @END ro[1]
LABEL @END

# Output
DECLARE ro BIT[2]

LABEL @START
JUMP @MID
LABEL @MID
JUMP-WHEN @MID ro[0]
JUMP-UNLESS @END ro[1]
LABEL @END

# Input
# Plundered from ../../good-test-files/good-defgate-with-long-name.quil
# long name
DEFGATE ______________________________________ugly-python-convention______________________________________:
    1, 0
    0, 1

# Output
DEFGATE ______________________________________ugly-python-convention______________________________________ AS PERMUTATION:
    0, 1


# Input
# Plundered from ../../good-test-files/good-defgate-with-param-arithmetic.quil
# DEFGATES w/params.

DEFGATE CPHASE(%theta):
    1, 0, 0, 0
    0, 1, 0, 0
    0, 0, 1, 0
    0, 0, 0, cis(pi+%theta)

CPHASE(1.0) 0 1
# Output
DEFGATE CPHASE(%theta):
    1.0, 0.0, 0.0, 0.0
    0.0, 1.0, 0.0, 0.0
    0.0, 0.0, 1.0, 0.0
    0.0, 0.0, 0.0, CIS(((pi)+%theta))

CPHASE(1.0) 0 1

# Input
# Plundered from ../../good-test-files/good-defgate-with-param.quil
# defgate with param

DEFGATE BASIC(%alpha):
    1, 0
    0, %alpha

BASIC(1.0) 1
# Output
DEFGATE BASIC(%alpha):
    1.0, 0.0
    0.0, %alpha

BASIC(1.0) 1

# Input
# Plundered from ../../good-test-files/good-euler-circuit.quil
# Fully general parametric gate with arg.

DEFCIRCUIT EULER(%alpha, %beta, %gamma) q:
    RX(%alpha) q
    RY(%beta)  q
    RZ(%gamma) q

EULER(pi, 2*pi, 3*pi/2) 0
# Output
DEFCIRCUIT EULER(%alpha, %beta, %gamma) q:
    RX(%alpha) q
    RY(%beta) q
    RZ(%gamma) q

RX(pi) 0
RY(2*pi) 0
RZ(3*pi/2) 0

# Input
# Plundered from ../../good-test-files/good-general-defgate.quil
# fully general defgate

DEFGATE GEN-GATE(%a,%b,%c,%d):
    %a, %b
    %c, %d

GEN-GATE(0,1,2,3) 0
# Output
DEFGATE GEN-GATE(%a, %b, %c, %d):
    %a, %b
    %c, %d

GEN-GATE(0.0, 1.0, 2.0, 3.0) 0

# Input
# Plundered from ../../good-test-files/good-loops-out-the-wazoo.quil
DECLARE ro BIT[2]

LABEL @START
X 0
JUMP-WHEN @START ro[0]
JUMP-WHEN @END ro[1]
X 0
JUMP-WHEN @START ro[0]
JUMP-WHEN @END ro[1]
X 0
JUMP-WHEN @START ro[0]
JUMP-WHEN @END ro[1]
X 0
JUMP-WHEN @START ro[0]
JUMP-WHEN @END ro[1]
X 0
JUMP-WHEN @START ro[0]
JUMP-WHEN @END ro[1]
X 0
JUMP-WHEN @START ro[0]
JUMP-WHEN @END ro[1]
X 0
JUMP-WHEN @START ro[0]
JUMP-WHEN @END ro[1]
X 0
JUMP-WHEN @START ro[0]
JUMP-WHEN @END ro[1]
X 0
JUMP-WHEN @START ro[0]
JUMP-WHEN @END ro[1]
X 0
JUMP-WHEN @START ro[0]
JUMP-WHEN @END ro[1]
X 0
JUMP-WHEN @START ro[0]
JUMP-WHEN @END ro[1]
X 0
JUMP-WHEN @START ro[0]
JUMP-WHEN @END ro[1]
X 0
JUMP-WHEN @START ro[0]
JUMP-WHEN @END ro[1]
X 0
JUMP-WHEN @START ro[0]
JUMP-WHEN @END ro[1]
X 0
JUMP-WHEN @START ro[0]
JUMP-WHEN @END ro[1]

LABEL @END
# Output
DECLARE ro BIT[2]

LABEL @START
X 0
JUMP-WHEN @START ro[0]
JUMP-WHEN @END ro[1]
X 0
JUMP-WHEN @START ro[0]
JUMP-WHEN @END ro[1]
X 0
JUMP-WHEN @START ro[0]
JUMP-WHEN @END ro[1]
X 0
JUMP-WHEN @START ro[0]
JUMP-WHEN @END ro[1]
X 0
JUMP-WHEN @START ro[0]
JUMP-WHEN @END ro[1]
X 0
JUMP-WHEN @START ro[0]
JUMP-WHEN @END ro[1]
X 0
JUMP-WHEN @START ro[0]
JUMP-WHEN @END ro[1]
X 0
JUMP-WHEN @START ro[0]
JUMP-WHEN @END ro[1]
X 0
JUMP-WHEN @START ro[0]
JUMP-WHEN @END ro[1]
X 0
JUMP-WHEN @START ro[0]
JUMP-WHEN @END ro[1]
X 0
JUMP-WHEN @START ro[0]
JUMP-WHEN @END ro[1]
X 0
JUMP-WHEN @START ro[0]
JUMP-WHEN @END ro[1]
X 0
JUMP-WHEN @START ro[0]
JUMP-WHEN @END ro[1]
X 0
JUMP-WHEN @START ro[0]
JUMP-WHEN @END ro[1]
X 0
JUMP-WHEN @START ro[0]
JUMP-WHEN @END ro[1]
LABEL @END

# Input
# Plundered from ../../good-test-files/good-measure.quil
# measurements

DECLARE ro BIT

MEASURE 0
MEASURE 1 ro[0]

# Output
DECLARE ro BIT

MEASURE 0
MEASURE 1 ro[0]

# Input
# Plundered from ../../good-test-files/good-memory-tree.quil
# a big tree of memory

# Function taken from CL-QUIL-TESTS
#
#(defun binary-memory-tree (n)
#  (with-output-to-string (s)
#    (labels ((rec (a b parent offset)
#               (let ((current (format nil "x~D-~D" a b)))
#                 (format s "DECLARE ~A OCTET[~D]~:[~; SHARING ~A~]" current (- b a) parent parent)
#                 (unless (zerop offset)
#                   (format s " OFFSET ~D OCTET" offset))
#                 (terpri s)
#                 (when (< 1 (- b a))
#                   (rec a (floor (+ a b) 2) current 0)
#                   (rec (floor (+ a b) 2) b current (- (floor (+ a b) 2) a))))))
#      (rec 0 n nil 0))))
#
#
# (binary-memory-tree 128)

DECLARE x0-128 OCTET[128]
DECLARE x0-64 OCTET[64] SHARING x0-128
DECLARE x0-32 OCTET[32] SHARING x0-64
DECLARE x0-16 OCTET[16] SHARING x0-32
DECLARE x0-8 OCTET[8] SHARING x0-16
DECLARE x0-4 OCTET[4] SHARING x0-8
DECLARE x0-2 OCTET[2] SHARING x0-4
DECLARE x0-1 OCTET[1] SHARING x0-2
DECLARE x1-2 OCTET[1] SHARING x0-2 OFFSET 1 OCTET
DECLARE x2-4 OCTET[2] SHARING x0-4 OFFSET 2 OCTET
DECLARE x2-3 OCTET[1] SHARING x2-4
DECLARE x3-4 OCTET[1] SHARING x2-4 OFFSET 1 OCTET
DECLARE x4-8 OCTET[4] SHARING x0-8 OFFSET 4 OCTET
DECLARE x4-6 OCTET[2] SHARING x4-8
DECLARE x4-5 OCTET[1] SHARING x4-6
DECLARE x5-6 OCTET[1] SHARING x4-6 OFFSET 1 OCTET
DECLARE x6-8 OCTET[2] SHARING x4-8 OFFSET 2 OCTET
DECLARE x6-7 OCTET[1] SHARING x6-8
DECLARE x7-8 OCTET[1] SHARING x6-8 OFFSET 1 OCTET
DECLARE x8-16 OCTET[8] SHARING x0-16 OFFSET 8 OCTET
DECLARE x8-12 OCTET[4] SHARING x8-16
DECLARE x8-10 OCTET[2] SHARING x8-12
DECLARE x8-9 OCTET[1] SHARING x8-10
DECLARE x9-10 OCTET[1] SHARING x8-10 OFFSET 1 OCTET
DECLARE x10-12 OCTET[2] SHARING x8-12 OFFSET 2 OCTET
DECLARE x10-11 OCTET[1] SHARING x10-12
DECLARE x11-12 OCTET[1] SHARING x10-12 OFFSET 1 OCTET
DECLARE x12-16 OCTET[4] SHARING x8-16 OFFSET 4 OCTET
DECLARE x12-14 OCTET[2] SHARING x12-16
DECLARE x12-13 OCTET[1] SHARING x12-14
DECLARE x13-14 OCTET[1] SHARING x12-14 OFFSET 1 OCTET
DECLARE x14-16 OCTET[2] SHARING x12-16 OFFSET 2 OCTET
DECLARE x14-15 OCTET[1] SHARING x14-16
DECLARE x15-16 OCTET[1] SHARING x14-16 OFFSET 1 OCTET
DECLARE x16-32 OCTET[16] SHARING x0-32 OFFSET 16 OCTET
DECLARE x16-24 OCTET[8] SHARING x16-32
DECLARE x16-20 OCTET[4] SHARING x16-24
DECLARE x16-18 OCTET[2] SHARING x16-20
DECLARE x16-17 OCTET[1] SHARING x16-18
DECLARE x17-18 OCTET[1] SHARING x16-18 OFFSET 1 OCTET
DECLARE x18-20 OCTET[2] SHARING x16-20 OFFSET 2 OCTET
DECLARE x18-19 OCTET[1] SHARING x18-20
DECLARE x19-20 OCTET[1] SHARING x18-20 OFFSET 1 OCTET
DECLARE x20-24 OCTET[4] SHARING x16-24 OFFSET 4 OCTET
DECLARE x20-22 OCTET[2] SHARING x20-24
DECLARE x20-21 OCTET[1] SHARING x20-22
DECLARE x21-22 OCTET[1] SHARING x20-22 OFFSET 1 OCTET
DECLARE x22-24 OCTET[2] SHARING x20-24 OFFSET 2 OCTET
DECLARE x22-23 OCTET[1] SHARING x22-24
DECLARE x23-24 OCTET[1] SHARING x22-24 OFFSET 1 OCTET
DECLARE x24-32 OCTET[8] SHARING x16-32 OFFSET 8 OCTET
DECLARE x24-28 OCTET[4] SHARING x24-32
DECLARE x24-26 OCTET[2] SHARING x24-28
DECLARE x24-25 OCTET[1] SHARING x24-26
DECLARE x25-26 OCTET[1] SHARING x24-26 OFFSET 1 OCTET
DECLARE x26-28 OCTET[2] SHARING x24-28 OFFSET 2 OCTET
DECLARE x26-27 OCTET[1] SHARING x26-28
DECLARE x27-28 OCTET[1] SHARING x26-28 OFFSET 1 OCTET
DECLARE x28-32 OCTET[4] SHARING x24-32 OFFSET 4 OCTET
DECLARE x28-30 OCTET[2] SHARING x28-32
DECLARE x28-29 OCTET[1] SHARING x28-30
DECLARE x29-30 OCTET[1] SHARING x28-30 OFFSET 1 OCTET
DECLARE x30-32 OCTET[2] SHARING x28-32 OFFSET 2 OCTET
DECLARE x30-31 OCTET[1] SHARING x30-32
DECLARE x31-32 OCTET[1] SHARING x30-32 OFFSET 1 OCTET
DECLARE x32-64 OCTET[32] SHARING x0-64 OFFSET 32 OCTET
DECLARE x32-48 OCTET[16] SHARING x32-64
DECLARE x32-40 OCTET[8] SHARING x32-48
DECLARE x32-36 OCTET[4] SHARING x32-40
DECLARE x32-34 OCTET[2] SHARING x32-36
DECLARE x32-33 OCTET[1] SHARING x32-34
DECLARE x33-34 OCTET[1] SHARING x32-34 OFFSET 1 OCTET
DECLARE x34-36 OCTET[2] SHARING x32-36 OFFSET 2 OCTET
DECLARE x34-35 OCTET[1] SHARING x34-36
DECLARE x35-36 OCTET[1] SHARING x34-36 OFFSET 1 OCTET
DECLARE x36-40 OCTET[4] SHARING x32-40 OFFSET 4 OCTET
DECLARE x36-38 OCTET[2] SHARING x36-40
DECLARE x36-37 OCTET[1] SHARING x36-38
DECLARE x37-38 OCTET[1] SHARING x36-38 OFFSET 1 OCTET
DECLARE x38-40 OCTET[2] SHARING x36-40 OFFSET 2 OCTET
DECLARE x38-39 OCTET[1] SHARING x38-40
DECLARE x39-40 OCTET[1] SHARING x38-40 OFFSET 1 OCTET
DECLARE x40-48 OCTET[8] SHARING x32-48 OFFSET 8 OCTET
DECLARE x40-44 OCTET[4] SHARING x40-48
DECLARE x40-42 OCTET[2] SHARING x40-44
DECLARE x40-41 OCTET[1] SHARING x40-42
DECLARE x41-42 OCTET[1] SHARING x40-42 OFFSET 1 OCTET
DECLARE x42-44 OCTET[2] SHARING x40-44 OFFSET 2 OCTET
DECLARE x42-43 OCTET[1] SHARING x42-44
DECLARE x43-44 OCTET[1] SHARING x42-44 OFFSET 1 OCTET
DECLARE x44-48 OCTET[4] SHARING x40-48 OFFSET 4 OCTET
DECLARE x44-46 OCTET[2] SHARING x44-48
DECLARE x44-45 OCTET[1] SHARING x44-46
DECLARE x45-46 OCTET[1] SHARING x44-46 OFFSET 1 OCTET
DECLARE x46-48 OCTET[2] SHARING x44-48 OFFSET 2 OCTET
DECLARE x46-47 OCTET[1] SHARING x46-48
DECLARE x47-48 OCTET[1] SHARING x46-48 OFFSET 1 OCTET
DECLARE x48-64 OCTET[16] SHARING x32-64 OFFSET 16 OCTET
DECLARE x48-56 OCTET[8] SHARING x48-64
DECLARE x48-52 OCTET[4] SHARING x48-56
DECLARE x48-50 OCTET[2] SHARING x48-52
DECLARE x48-49 OCTET[1] SHARING x48-50
DECLARE x49-50 OCTET[1] SHARING x48-50 OFFSET 1 OCTET
DECLARE x50-52 OCTET[2] SHARING x48-52 OFFSET 2 OCTET
DECLARE x50-51 OCTET[1] SHARING x50-52
DECLARE x51-52 OCTET[1] SHARING x50-52 OFFSET 1 OCTET
DECLARE x52-56 OCTET[4] SHARING x48-56 OFFSET 4 OCTET
DECLARE x52-54 OCTET[2] SHARING x52-56
DECLARE x52-53 OCTET[1] SHARING x52-54
DECLARE x53-54 OCTET[1] SHARING x52-54 OFFSET 1 OCTET
DECLARE x54-56 OCTET[2] SHARING x52-56 OFFSET 2 OCTET
DECLARE x54-55 OCTET[1] SHARING x54-56
DECLARE x55-56 OCTET[1] SHARING x54-56 OFFSET 1 OCTET
DECLARE x56-64 OCTET[8] SHARING x48-64 OFFSET 8 OCTET
DECLARE x56-60 OCTET[4] SHARING x56-64
DECLARE x56-58 OCTET[2] SHARING x56-60
DECLARE x56-57 OCTET[1] SHARING x56-58
DECLARE x57-58 OCTET[1] SHARING x56-58 OFFSET 1 OCTET
DECLARE x58-60 OCTET[2] SHARING x56-60 OFFSET 2 OCTET
DECLARE x58-59 OCTET[1] SHARING x58-60
DECLARE x59-60 OCTET[1] SHARING x58-60 OFFSET 1 OCTET
DECLARE x60-64 OCTET[4] SHARING x56-64 OFFSET 4 OCTET
DECLARE x60-62 OCTET[2] SHARING x60-64
DECLARE x60-61 OCTET[1] SHARING x60-62
DECLARE x61-62 OCTET[1] SHARING x60-62 OFFSET 1 OCTET
DECLARE x62-64 OCTET[2] SHARING x60-64 OFFSET 2 OCTET
DECLARE x62-63 OCTET[1] SHARING x62-64
DECLARE x63-64 OCTET[1] SHARING x62-64 OFFSET 1 OCTET
DECLARE x64-128 OCTET[64] SHARING x0-128 OFFSET 64 OCTET
DECLARE x64-96 OCTET[32] SHARING x64-128
DECLARE x64-80 OCTET[16] SHARING x64-96
DECLARE x64-72 OCTET[8] SHARING x64-80
DECLARE x64-68 OCTET[4] SHARING x64-72
DECLARE x64-66 OCTET[2] SHARING x64-68
DECLARE x64-65 OCTET[1] SHARING x64-66
DECLARE x65-66 OCTET[1] SHARING x64-66 OFFSET 1 OCTET
DECLARE x66-68 OCTET[2] SHARING x64-68 OFFSET 2 OCTET
DECLARE x66-67 OCTET[1] SHARING x66-68
DECLARE x67-68 OCTET[1] SHARING x66-68 OFFSET 1 OCTET
DECLARE x68-72 OCTET[4] SHARING x64-72 OFFSET 4 OCTET
DECLARE x68-70 OCTET[2] SHARING x68-72
DECLARE x68-69 OCTET[1] SHARING x68-70
DECLARE x69-70 OCTET[1] SHARING x68-70 OFFSET 1 OCTET
DECLARE x70-72 OCTET[2] SHARING x68-72 OFFSET 2 OCTET
DECLARE x70-71 OCTET[1] SHARING x70-72
DECLARE x71-72 OCTET[1] SHARING x70-72 OFFSET 1 OCTET
DECLARE x72-80 OCTET[8] SHARING x64-80 OFFSET 8 OCTET
DECLARE x72-76 OCTET[4] SHARING x72-80
DECLARE x72-74 OCTET[2] SHARING x72-76
DECLARE x72-73 OCTET[1] SHARING x72-74
DECLARE x73-74 OCTET[1] SHARING x72-74 OFFSET 1 OCTET
DECLARE x74-76 OCTET[2] SHARING x72-76 OFFSET 2 OCTET
DECLARE x74-75 OCTET[1] SHARING x74-76
DECLARE x75-76 OCTET[1] SHARING x74-76 OFFSET 1 OCTET
DECLARE x76-80 OCTET[4] SHARING x72-80 OFFSET 4 OCTET
DECLARE x76-78 OCTET[2] SHARING x76-80
DECLARE x76-77 OCTET[1] SHARING x76-78
DECLARE x77-78 OCTET[1] SHARING x76-78 OFFSET 1 OCTET
DECLARE x78-80 OCTET[2] SHARING x76-80 OFFSET 2 OCTET
DECLARE x78-79 OCTET[1] SHARING x78-80
DECLARE x79-80 OCTET[1] SHARING x78-80 OFFSET 1 OCTET
DECLARE x80-96 OCTET[16] SHARING x64-96 OFFSET 16 OCTET
DECLARE x80-88 OCTET[8] SHARING x80-96
DECLARE x80-84 OCTET[4] SHARING x80-88
DECLARE x80-82 OCTET[2] SHARING x80-84
DECLARE x80-81 OCTET[1] SHARING x80-82
DECLARE x81-82 OCTET[1] SHARING x80-82 OFFSET 1 OCTET
DECLARE x82-84 OCTET[2] SHARING x80-84 OFFSET 2 OCTET
DECLARE x82-83 OCTET[1] SHARING x82-84
DECLARE x83-84 OCTET[1] SHARING x82-84 OFFSET 1 OCTET
DECLARE x84-88 OCTET[4] SHARING x80-88 OFFSET 4 OCTET
DECLARE x84-86 OCTET[2] SHARING x84-88
DECLARE x84-85 OCTET[1] SHARING x84-86
DECLARE x85-86 OCTET[1] SHARING x84-86 OFFSET 1 OCTET
DECLARE x86-88 OCTET[2] SHARING x84-88 OFFSET 2 OCTET
DECLARE x86-87 OCTET[1] SHARING x86-88
DECLARE x87-88 OCTET[1] SHARING x86-88 OFFSET 1 OCTET
DECLARE x88-96 OCTET[8] SHARING x80-96 OFFSET 8 OCTET
DECLARE x88-92 OCTET[4] SHARING x88-96
DECLARE x88-90 OCTET[2] SHARING x88-92
DECLARE x88-89 OCTET[1] SHARING x88-90
DECLARE x89-90 OCTET[1] SHARING x88-90 OFFSET 1 OCTET
DECLARE x90-92 OCTET[2] SHARING x88-92 OFFSET 2 OCTET
DECLARE x90-91 OCTET[1] SHARING x90-92
DECLARE x91-92 OCTET[1] SHARING x90-92 OFFSET 1 OCTET
DECLARE x92-96 OCTET[4] SHARING x88-96 OFFSET 4 OCTET
DECLARE x92-94 OCTET[2] SHARING x92-96
DECLARE x92-93 OCTET[1] SHARING x92-94
DECLARE x93-94 OCTET[1] SHARING x92-94 OFFSET 1 OCTET
DECLARE x94-96 OCTET[2] SHARING x92-96 OFFSET 2 OCTET
DECLARE x94-95 OCTET[1] SHARING x94-96
DECLARE x95-96 OCTET[1] SHARING x94-96 OFFSET 1 OCTET
DECLARE x96-128 OCTET[32] SHARING x64-128 OFFSET 32 OCTET
DECLARE x96-112 OCTET[16] SHARING x96-128
DECLARE x96-104 OCTET[8] SHARING x96-112
DECLARE x96-100 OCTET[4] SHARING x96-104
DECLARE x96-98 OCTET[2] SHARING x96-100
DECLARE x96-97 OCTET[1] SHARING x96-98
DECLARE x97-98 OCTET[1] SHARING x96-98 OFFSET 1 OCTET
DECLARE x98-100 OCTET[2] SHARING x96-100 OFFSET 2 OCTET
DECLARE x98-99 OCTET[1] SHARING x98-100
DECLARE x99-100 OCTET[1] SHARING x98-100 OFFSET 1 OCTET
DECLARE x100-104 OCTET[4] SHARING x96-104 OFFSET 4 OCTET
DECLARE x100-102 OCTET[2] SHARING x100-104
DECLARE x100-101 OCTET[1] SHARING x100-102
DECLARE x101-102 OCTET[1] SHARING x100-102 OFFSET 1 OCTET
DECLARE x102-104 OCTET[2] SHARING x100-104 OFFSET 2 OCTET
DECLARE x102-103 OCTET[1] SHARING x102-104
DECLARE x103-104 OCTET[1] SHARING x102-104 OFFSET 1 OCTET
DECLARE x104-112 OCTET[8] SHARING x96-112 OFFSET 8 OCTET
DECLARE x104-108 OCTET[4] SHARING x104-112
DECLARE x104-106 OCTET[2] SHARING x104-108
DECLARE x104-105 OCTET[1] SHARING x104-106
DECLARE x105-106 OCTET[1] SHARING x104-106 OFFSET 1 OCTET
DECLARE x106-108 OCTET[2] SHARING x104-108 OFFSET 2 OCTET
DECLARE x106-107 OCTET[1] SHARING x106-108
DECLARE x107-108 OCTET[1] SHARING x106-108 OFFSET 1 OCTET
DECLARE x108-112 OCTET[4] SHARING x104-112 OFFSET 4 OCTET
DECLARE x108-110 OCTET[2] SHARING x108-112
DECLARE x108-109 OCTET[1] SHARING x108-110
DECLARE x109-110 OCTET[1] SHARING x108-110 OFFSET 1 OCTET
DECLARE x110-112 OCTET[2] SHARING x108-112 OFFSET 2 OCTET
DECLARE x110-111 OCTET[1] SHARING x110-112
DECLARE x111-112 OCTET[1] SHARING x110-112 OFFSET 1 OCTET
DECLARE x112-128 OCTET[16] SHARING x96-128 OFFSET 16 OCTET
DECLARE x112-120 OCTET[8] SHARING x112-128
DECLARE x112-116 OCTET[4] SHARING x112-120
DECLARE x112-114 OCTET[2] SHARING x112-116
DECLARE x112-113 OCTET[1] SHARING x112-114
DECLARE x113-114 OCTET[1] SHARING x112-114 OFFSET 1 OCTET
DECLARE x114-116 OCTET[2] SHARING x112-116 OFFSET 2 OCTET
DECLARE x114-115 OCTET[1] SHARING x114-116
DECLARE x115-116 OCTET[1] SHARING x114-116 OFFSET 1 OCTET
DECLARE x116-120 OCTET[4] SHARING x112-120 OFFSET 4 OCTET
DECLARE x116-118 OCTET[2] SHARING x116-120
DECLARE x116-117 OCTET[1] SHARING x116-118
DECLARE x117-118 OCTET[1] SHARING x116-118 OFFSET 1 OCTET
DECLARE x118-120 OCTET[2] SHARING x116-120 OFFSET 2 OCTET
DECLARE x118-119 OCTET[1] SHARING x118-120
DECLARE x119-120 OCTET[1] SHARING x118-120 OFFSET 1 OCTET
DECLARE x120-128 OCTET[8] SHARING x112-128 OFFSET 8 OCTET
DECLARE x120-124 OCTET[4] SHARING x120-128
DECLARE x120-122 OCTET[2] SHARING x120-124
DECLARE x120-121 OCTET[1] SHARING x120-122
DECLARE x121-122 OCTET[1] SHARING x120-122 OFFSET 1 OCTET
DECLARE x122-124 OCTET[2] SHARING x120-124 OFFSET 2 OCTET
DECLARE x122-123 OCTET[1] SHARING x122-124
DECLARE x123-124 OCTET[1] SHARING x122-124 OFFSET 1 OCTET
DECLARE x124-128 OCTET[4] SHARING x120-128 OFFSET 4 OCTET
DECLARE x124-126 OCTET[2] SHARING x124-128
DECLARE x124-125 OCTET[1] SHARING x124-126
DECLARE x125-126 OCTET[1] SHARING x124-126 OFFSET 1 OCTET
DECLARE x126-128 OCTET[2] SHARING x124-128 OFFSET 2 OCTET
DECLARE x126-127 OCTET[1] SHARING x126-128
DECLARE x127-128 OCTET[1] SHARING x126-128 OFFSET 1 OCTET

# Output
DECLARE x0-128 OCTET[128]
DECLARE x0-64 OCTET[64] SHARING x0-128
DECLARE x0-32 OCTET[32] SHARING x0-64
DECLARE x0-16 OCTET[16] SHARING x0-32
DECLARE x0-8 OCTET[8] SHARING x0-16
DECLARE x0-4 OCTET[4] SHARING x0-8
DECLARE x0-2 OCTET[2] SHARING x0-4
DECLARE x0-1 OCTET SHARING x0-2
DECLARE x1-2 OCTET SHARING x0-2 OFFSET 1 OCTET
DECLARE x2-4 OCTET[2] SHARING x0-4 OFFSET 2 OCTET
DECLARE x2-3 OCTET SHARING x2-4
DECLARE x3-4 OCTET SHARING x2-4 OFFSET 1 OCTET
DECLARE x4-8 OCTET[4] SHARING x0-8 OFFSET 4 OCTET
DECLARE x4-6 OCTET[2] SHARING x4-8
DECLARE x4-5 OCTET SHARING x4-6
DECLARE x5-6 OCTET SHARING x4-6 OFFSET 1 OCTET
DECLARE x6-8 OCTET[2] SHARING x4-8 OFFSET 2 OCTET
DECLARE x6-7 OCTET SHARING x6-8
DECLARE x7-8 OCTET SHARING x6-8 OFFSET 1 OCTET
DECLARE x8-16 OCTET[8] SHARING x0-16 OFFSET 8 OCTET
DECLARE x8-12 OCTET[4] SHARING x8-16
DECLARE x8-10 OCTET[2] SHARING x8-12
DECLARE x8-9 OCTET SHARING x8-10
DECLARE x9-10 OCTET SHARING x8-10 OFFSET 1 OCTET
DECLARE x10-12 OCTET[2] SHARING x8-12 OFFSET 2 OCTET
DECLARE x10-11 OCTET SHARING x10-12
DECLARE x11-12 OCTET SHARING x10-12 OFFSET 1 OCTET
DECLARE x12-16 OCTET[4] SHARING x8-16 OFFSET 4 OCTET
DECLARE x12-14 OCTET[2] SHARING x12-16
DECLARE x12-13 OCTET SHARING x12-14
DECLARE x13-14 OCTET SHARING x12-14 OFFSET 1 OCTET
DECLARE x14-16 OCTET[2] SHARING x12-16 OFFSET 2 OCTET
DECLARE x14-15 OCTET SHARING x14-16
DECLARE x15-16 OCTET SHARING x14-16 OFFSET 1 OCTET
DECLARE x16-32 OCTET[16] SHARING x0-32 OFFSET 16 OCTET
DECLARE x16-24 OCTET[8] SHARING x16-32
DECLARE x16-20 OCTET[4] SHARING x16-24
DECLARE x16-18 OCTET[2] SHARING x16-20
DECLARE x16-17 OCTET SHARING x16-18
DECLARE x17-18 OCTET SHARING x16-18 OFFSET 1 OCTET
DECLARE x18-20 OCTET[2] SHARING x16-20 OFFSET 2 OCTET
DECLARE x18-19 OCTET SHARING x18-20
DECLARE x19-20 OCTET SHARING x18-20 OFFSET 1 OCTET
DECLARE x20-24 OCTET[4] SHARING x16-24 OFFSET 4 OCTET
DECLARE x20-22 OCTET[2] SHARING x20-24
DECLARE x20-21 OCTET SHARING x20-22
DECLARE x21-22 OCTET SHARING x20-22 OFFSET 1 OCTET
DECLARE x22-24 OCTET[2] SHARING x20-24 OFFSET 2 OCTET
DECLARE x22-23 OCTET SHARING x22-24
DECLARE x23-24 OCTET SHARING x22-24 OFFSET 1 OCTET
DECLARE x24-32 OCTET[8] SHARING x16-32 OFFSET 8 OCTET
DECLARE x24-28 OCTET[4] SHARING x24-32
DECLARE x24-26 OCTET[2] SHARING x24-28
DECLARE x24-25 OCTET SHARING x24-26
DECLARE x25-26 OCTET SHARING x24-26 OFFSET 1 OCTET
DECLARE x26-28 OCTET[2] SHARING x24-28 OFFSET 2 OCTET
DECLARE x26-27 OCTET SHARING x26-28
DECLARE x27-28 OCTET SHARING x26-28 OFFSET 1 OCTET
DECLARE x28-32 OCTET[4] SHARING x24-32 OFFSET 4 OCTET
DECLARE x28-30 OCTET[2] SHARING x28-32
DECLARE x28-29 OCTET SHARING x28-30
DECLARE x29-30 OCTET SHARING x28-30 OFFSET 1 OCTET
DECLARE x30-32 OCTET[2] SHARING x28-32 OFFSET 2 OCTET
DECLARE x30-31 OCTET SHARING x30-32
DECLARE x31-32 OCTET SHARING x30-32 OFFSET 1 OCTET
DECLARE x32-64 OCTET[32] SHARING x0-64 OFFSET 32 OCTET
DECLARE x32-48 OCTET[16] SHARING x32-64
DECLARE x32-40 OCTET[8] SHARING x32-48
DECLARE x32-36 OCTET[4] SHARING x32-40
DECLARE x32-34 OCTET[2] SHARING x32-36
DECLARE x32-33 OCTET SHARING x32-34
DECLARE x33-34 OCTET SHARING x32-34 OFFSET 1 OCTET
DECLARE x34-36 OCTET[2] SHARING x32-36 OFFSET 2 OCTET
DECLARE x34-35 OCTET SHARING x34-36
DECLARE x35-36 OCTET SHARING x34-36 OFFSET 1 OCTET
DECLARE x36-40 OCTET[4] SHARING x32-40 OFFSET 4 OCTET
DECLARE x36-38 OCTET[2] SHARING x36-40
DECLARE x36-37 OCTET SHARING x36-38
DECLARE x37-38 OCTET SHARING x36-38 OFFSET 1 OCTET
DECLARE x38-40 OCTET[2] SHARING x36-40 OFFSET 2 OCTET
DECLARE x38-39 OCTET SHARING x38-40
DECLARE x39-40 OCTET SHARING x38-40 OFFSET 1 OCTET
DECLARE x40-48 OCTET[8] SHARING x32-48 OFFSET 8 OCTET
DECLARE x40-44 OCTET[4] SHARING x40-48
DECLARE x40-42 OCTET[2] SHARING x40-44
DECLARE x40-41 OCTET SHARING x40-42
DECLARE x41-42 OCTET SHARING x40-42 OFFSET 1 OCTET
DECLARE x42-44 OCTET[2] SHARING x40-44 OFFSET 2 OCTET
DECLARE x42-43 OCTET SHARING x42-44
DECLARE x43-44 OCTET SHARING x42-44 OFFSET 1 OCTET
DECLARE x44-48 OCTET[4] SHARING x40-48 OFFSET 4 OCTET
DECLARE x44-46 OCTET[2] SHARING x44-48
DECLARE x44-45 OCTET SHARING x44-46
DECLARE x45-46 OCTET SHARING x44-46 OFFSET 1 OCTET
DECLARE x46-48 OCTET[2] SHARING x44-48 OFFSET 2 OCTET
DECLARE x46-47 OCTET SHARING x46-48
DECLARE x47-48 OCTET SHARING x46-48 OFFSET 1 OCTET
DECLARE x48-64 OCTET[16] SHARING x32-64 OFFSET 16 OCTET
DECLARE x48-56 OCTET[8] SHARING x48-64
DECLARE x48-52 OCTET[4] SHARING x48-56
DECLARE x48-50 OCTET[2] SHARING x48-52
DECLARE x48-49 OCTET SHARING x48-50
DECLARE x49-50 OCTET SHARING x48-50 OFFSET 1 OCTET
DECLARE x50-52 OCTET[2] SHARING x48-52 OFFSET 2 OCTET
DECLARE x50-51 OCTET SHARING x50-52
DECLARE x51-52 OCTET SHARING x50-52 OFFSET 1 OCTET
DECLARE x52-56 OCTET[4] SHARING x48-56 OFFSET 4 OCTET
DECLARE x52-54 OCTET[2] SHARING x52-56
DECLARE x52-53 OCTET SHARING x52-54
DECLARE x53-54 OCTET SHARING x52-54 OFFSET 1 OCTET
DECLARE x54-56 OCTET[2] SHARING x52-56 OFFSET 2 OCTET
DECLARE x54-55 OCTET SHARING x54-56
DECLARE x55-56 OCTET SHARING x54-56 OFFSET 1 OCTET
DECLARE x56-64 OCTET[8] SHARING x48-64 OFFSET 8 OCTET
DECLARE x56-60 OCTET[4] SHARING x56-64
DECLARE x56-58 OCTET[2] SHARING x56-60
DECLARE x56-57 OCTET SHARING x56-58
DECLARE x57-58 OCTET SHARING x56-58 OFFSET 1 OCTET
DECLARE x58-60 OCTET[2] SHARING x56-60 OFFSET 2 OCTET
DECLARE x58-59 OCTET SHARING x58-60
DECLARE x59-60 OCTET SHARING x58-60 OFFSET 1 OCTET
DECLARE x60-64 OCTET[4] SHARING x56-64 OFFSET 4 OCTET
DECLARE x60-62 OCTET[2] SHARING x60-64
DECLARE x60-61 OCTET SHARING x60-62
DECLARE x61-62 OCTET SHARING x60-62 OFFSET 1 OCTET
DECLARE x62-64 OCTET[2] SHARING x60-64 OFFSET 2 OCTET
DECLARE x62-63 OCTET SHARING x62-64
DECLARE x63-64 OCTET SHARING x62-64 OFFSET 1 OCTET
DECLARE x64-128 OCTET[64] SHARING x0-128 OFFSET 64 OCTET
DECLARE x64-96 OCTET[32] SHARING x64-128
DECLARE x64-80 OCTET[16] SHARING x64-96
DECLARE x64-72 OCTET[8] SHARING x64-80
DECLARE x64-68 OCTET[4] SHARING x64-72
DECLARE x64-66 OCTET[2] SHARING x64-68
DECLARE x64-65 OCTET SHARING x64-66
DECLARE x65-66 OCTET SHARING x64-66 OFFSET 1 OCTET
DECLARE x66-68 OCTET[2] SHARING x64-68 OFFSET 2 OCTET
DECLARE x66-67 OCTET SHARING x66-68
DECLARE x67-68 OCTET SHARING x66-68 OFFSET 1 OCTET
DECLARE x68-72 OCTET[4] SHARING x64-72 OFFSET 4 OCTET
DECLARE x68-70 OCTET[2] SHARING x68-72
DECLARE x68-69 OCTET SHARING x68-70
DECLARE x69-70 OCTET SHARING x68-70 OFFSET 1 OCTET
DECLARE x70-72 OCTET[2] SHARING x68-72 OFFSET 2 OCTET
DECLARE x70-71 OCTET SHARING x70-72
DECLARE x71-72 OCTET SHARING x70-72 OFFSET 1 OCTET
DECLARE x72-80 OCTET[8] SHARING x64-80 OFFSET 8 OCTET
DECLARE x72-76 OCTET[4] SHARING x72-80
DECLARE x72-74 OCTET[2] SHARING x72-76
DECLARE x72-73 OCTET SHARING x72-74
DECLARE x73-74 OCTET SHARING x72-74 OFFSET 1 OCTET
DECLARE x74-76 OCTET[2] SHARING x72-76 OFFSET 2 OCTET
DECLARE x74-75 OCTET SHARING x74-76
DECLARE x75-76 OCTET SHARING x74-76 OFFSET 1 OCTET
DECLARE x76-80 OCTET[4] SHARING x72-80 OFFSET 4 OCTET
DECLARE x76-78 OCTET[2] SHARING x76-80
DECLARE x76-77 OCTET SHARING x76-78
DECLARE x77-78 OCTET SHARING x76-78 OFFSET 1 OCTET
DECLARE x78-80 OCTET[2] SHARING x76-80 OFFSET 2 OCTET
DECLARE x78-79 OCTET SHARING x78-80
DECLARE x79-80 OCTET SHARING x78-80 OFFSET 1 OCTET
DECLARE x80-96 OCTET[16] SHARING x64-96 OFFSET 16 OCTET
DECLARE x80-88 OCTET[8] SHARING x80-96
DECLARE x80-84 OCTET[4] SHARING x80-88
DECLARE x80-82 OCTET[2] SHARING x80-84
DECLARE x80-81 OCTET SHARING x80-82
DECLARE x81-82 OCTET SHARING x80-82 OFFSET 1 OCTET
DECLARE x82-84 OCTET[2] SHARING x80-84 OFFSET 2 OCTET
DECLARE x82-83 OCTET SHARING x82-84
DECLARE x83-84 OCTET SHARING x82-84 OFFSET 1 OCTET
DECLARE x84-88 OCTET[4] SHARING x80-88 OFFSET 4 OCTET
DECLARE x84-86 OCTET[2] SHARING x84-88
DECLARE x84-85 OCTET SHARING x84-86
DECLARE x85-86 OCTET SHARING x84-86 OFFSET 1 OCTET
DECLARE x86-88 OCTET[2] SHARING x84-88 OFFSET 2 OCTET
DECLARE x86-87 OCTET SHARING x86-88
DECLARE x87-88 OCTET SHARING x86-88 OFFSET 1 OCTET
DECLARE x88-96 OCTET[8] SHARING x80-96 OFFSET 8 OCTET
DECLARE x88-92 OCTET[4] SHARING x88-96
DECLARE x88-90 OCTET[2] SHARING x88-92
DECLARE x88-89 OCTET SHARING x88-90
DECLARE x89-90 OCTET SHARING x88-90 OFFSET 1 OCTET
DECLARE x90-92 OCTET[2] SHARING x88-92 OFFSET 2 OCTET
DECLARE x90-91 OCTET SHARING x90-92
DECLARE x91-92 OCTET SHARING x90-92 OFFSET 1 OCTET
DECLARE x92-96 OCTET[4] SHARING x88-96 OFFSET 4 OCTET
DECLARE x92-94 OCTET[2] SHARING x92-96
DECLARE x92-93 OCTET SHARING x92-94
DECLARE x93-94 OCTET SHARING x92-94 OFFSET 1 OCTET
DECLARE x94-96 OCTET[2] SHARING x92-96 OFFSET 2 OCTET
DECLARE x94-95 OCTET SHARING x94-96
DECLARE x95-96 OCTET SHARING x94-96 OFFSET 1 OCTET
DECLARE x96-128 OCTET[32] SHARING x64-128 OFFSET 32 OCTET
DECLARE x96-112 OCTET[16] SHARING x96-128
DECLARE x96-104 OCTET[8] SHARING x96-112
DECLARE x96-100 OCTET[4] SHARING x96-104
DECLARE x96-98 OCTET[2] SHARING x96-100
DECLARE x96-97 OCTET SHARING x96-98
DECLARE x97-98 OCTET SHARING x96-98 OFFSET 1 OCTET
DECLARE x98-100 OCTET[2] SHARING x96-100 OFFSET 2 OCTET
DECLARE x98-99 OCTET SHARING x98-100
DECLARE x99-100 OCTET SHARING x98-100 OFFSET 1 OCTET
DECLARE x100-104 OCTET[4] SHARING x96-104 OFFSET 4 OCTET
DECLARE x100-102 OCTET[2] SHARING x100-104
DECLARE x100-101 OCTET SHARING x100-102
DECLARE x101-102 OCTET SHARING x100-102 OFFSET 1 OCTET
DECLARE x102-104 OCTET[2] SHARING x100-104 OFFSET 2 OCTET
DECLARE x102-103 OCTET SHARING x102-104
DECLARE x103-104 OCTET SHARING x102-104 OFFSET 1 OCTET
DECLARE x104-112 OCTET[8] SHARING x96-112 OFFSET 8 OCTET
DECLARE x104-108 OCTET[4] SHARING x104-112
DECLARE x104-106 OCTET[2] SHARING x104-108
DECLARE x104-105 OCTET SHARING x104-106
DECLARE x105-106 OCTET SHARING x104-106 OFFSET 1 OCTET
DECLARE x106-108 OCTET[2] SHARING x104-108 OFFSET 2 OCTET
DECLARE x106-107 OCTET SHARING x106-108
DECLARE x107-108 OCTET SHARING x106-108 OFFSET 1 OCTET
DECLARE x108-112 OCTET[4] SHARING x104-112 OFFSET 4 OCTET
DECLARE x108-110 OCTET[2] SHARING x108-112
DECLARE x108-109 OCTET SHARING x108-110
DECLARE x109-110 OCTET SHARING x108-110 OFFSET 1 OCTET
DECLARE x110-112 OCTET[2] SHARING x108-112 OFFSET 2 OCTET
DECLARE x110-111 OCTET SHARING x110-112
DECLARE x111-112 OCTET SHARING x110-112 OFFSET 1 OCTET
DECLARE x112-128 OCTET[16] SHARING x96-128 OFFSET 16 OCTET
DECLARE x112-120 OCTET[8] SHARING x112-128
DECLARE x112-116 OCTET[4] SHARING x112-120
DECLARE x112-114 OCTET[2] SHARING x112-116
DECLARE x112-113 OCTET SHARING x112-114
DECLARE x113-114 OCTET SHARING x112-114 OFFSET 1 OCTET
DECLARE x114-116 OCTET[2] SHARING x112-116 OFFSET 2 OCTET
DECLARE x114-115 OCTET SHARING x114-116
DECLARE x115-116 OCTET SHARING x114-116 OFFSET 1 OCTET
DECLARE x116-120 OCTET[4] SHARING x112-120 OFFSET 4 OCTET
DECLARE x116-118 OCTET[2] SHARING x116-120
DECLARE x116-117 OCTET SHARING x116-118
DECLARE x117-118 OCTET SHARING x116-118 OFFSET 1 OCTET
DECLARE x118-120 OCTET[2] SHARING x116-120 OFFSET 2 OCTET
DECLARE x118-119 OCTET SHARING x118-120
DECLARE x119-120 OCTET SHARING x118-120 OFFSET 1 OCTET
DECLARE x120-128 OCTET[8] SHARING x112-128 OFFSET 8 OCTET
DECLARE x120-124 OCTET[4] SHARING x120-128
DECLARE x120-122 OCTET[2] SHARING x120-124
DECLARE x120-121 OCTET SHARING x120-122
DECLARE x121-122 OCTET SHARING x120-122 OFFSET 1 OCTET
DECLARE x122-124 OCTET[2] SHARING x120-124 OFFSET 2 OCTET
DECLARE x122-123 OCTET SHARING x122-124
DECLARE x123-124 OCTET SHARING x122-124 OFFSET 1 OCTET
DECLARE x124-128 OCTET[4] SHARING x120-128 OFFSET 4 OCTET
DECLARE x124-126 OCTET[2] SHARING x124-128
DECLARE x124-125 OCTET SHARING x124-126
DECLARE x125-126 OCTET SHARING x124-126 OFFSET 1 OCTET
DECLARE x126-128 OCTET[2] SHARING x124-128 OFFSET 2 OCTET
DECLARE x126-127 OCTET SHARING x126-128
DECLARE x127-128 OCTET SHARING x126-128 OFFSET 1 OCTET


# Input
# Plundered from ../../good-test-files/good-misc-instructions.quil
# simple misc instructions

NOP
WAIT
RESET
HALT
# Output
NOP
WAIT
RESET
HALT

# Input
# Disable fixed-point check
#
# The fixed-point check is disabled for this test because something in
# the PARSE-QUIL -> PRINT-PARSED-PROGRAM cycle causes sequences of
# CONTROLLED DAGGER or DAGGER CONTROLLED to permute, which makes
# fixed-point check break. For example:
#
# CONTROLLED DAGGER Y 0 1
# -> parse -> print ->
# DAGGER CONTROLLED Y 0 1
# -> parse -> print ->
# CONTROLLED DAGGER Y 0 1
#
# Plundered from ../../good-test-files/good-modifiers.quil
# various mixes of modifiers

Y 0
CONTROLLED Y 0 1
CONTROLLED CONTROLLED Y 0 1 2
CONTROLLED CONTROLLED CONTROLLED Y 0 1 2 3

DAGGER Y 0
DAGGER DAGGER Y 0
DAGGER DAGGER DAGGER Y 0

CONTROLLED DAGGER Y 0 1
CONTROLLED DAGGER CONTROLLED Y 0 1 2
CONTROLLED DAGGER CONTROLLED DAGGER Y 0 1 2

DEFGATE G:
    1, 0
    0, 1

CONTROLLED G 0 1
DAGGER G 0

# Output
DEFGATE G AS PERMUTATION:
    0, 1

Y 0
CONTROLLED Y 0 1
CONTROLLED CONTROLLED Y 0 1 2
CONTROLLED CONTROLLED CONTROLLED Y 0 1 2 3
DAGGER Y 0
DAGGER DAGGER Y 0
DAGGER DAGGER DAGGER Y 0
CONTROLLED DAGGER Y 0 1
CONTROLLED DAGGER CONTROLLED Y 0 1 2
CONTROLLED DAGGER CONTROLLED DAGGER Y 0 1 2
CONTROLLED G 0 1
DAGGER G 0

# Input
# Plundered from ../../good-test-files/good-overlapping-declares.quil
# overlapping DECLARE

DECLARE a BIT[128]
DECLARE b OCTET[128]
DECLARE c INTEGER[128]
DECLARE d REAL[128]

DECLARE a0 BIT SHARING a
DECLARE a1 BIT SHARING b
DECLARE a2 BIT SHARING c
DECLARE a3 BIT SHARING d

DECLARE b0 OCTET SHARING b
DECLARE b1 OCTET SHARING a
DECLARE b2 OCTET SHARING c
DECLARE b3 OCTET SHARING d

DECLARE c0 INTEGER SHARING c
DECLARE c1 INTEGER SHARING a
DECLARE c2 INTEGER SHARING b
DECLARE c3 INTEGER SHARING d

DECLARE d0 REAL SHARING d
DECLARE d1 REAL SHARING a
DECLARE d2 REAL SHARING b
DECLARE d3 REAL SHARING c

# Output
DECLARE a BIT[128]
DECLARE b OCTET[128]
DECLARE c INTEGER[128]
DECLARE d REAL[128]
DECLARE a0 BIT SHARING a
DECLARE a1 BIT SHARING b
DECLARE a2 BIT SHARING c
DECLARE a3 BIT SHARING d
DECLARE b0 OCTET SHARING b
DECLARE b1 OCTET SHARING a
DECLARE b2 OCTET SHARING c
DECLARE b3 OCTET SHARING d
DECLARE c0 INTEGER SHARING c
DECLARE c1 INTEGER SHARING a
DECLARE c2 INTEGER SHARING b
DECLARE c3 INTEGER SHARING d
DECLARE d0 REAL SHARING d
DECLARE d1 REAL SHARING a
DECLARE d2 REAL SHARING b
DECLARE d3 REAL SHARING c


# Input
# Plundered from ../../good-test-files/good-pragmas.quil
# valid PRAGMA lines

PRAGMA x
PRAGMA x y
PRAGMA x y z

PRAGMA x "something"
PRAGMA x y "something"
PRAGMA x y z "something"

PRAGMA ___X_y_Z "s"


# Output
PRAGMA x
PRAGMA x y
PRAGMA x y z
PRAGMA x "something"
PRAGMA x y "something"
PRAGMA x y z "something"
PRAGMA ___X_y_Z "s"

# Input
# Plundered from ../../good-test-files/good-simple-params.quil
# Gates with simple params.

CPHASE(1.0) 0 1
CPHASE(1.0-2.0i) 1 0


# Output
CPHASE(1.0) 0 1
CPHASE(1.0-2.0i) 1 0

# Input
# Plundered from ../../compiler-hook-test-files/CCNOT.quil
CCNOT 0 1 2
X 0
# Output
CCNOT 0 1 2
X 0

# Input
# Plundered from ../../compiler-hook-test-files/commuting-blocks.quil
PRAGMA COMMUTING_BLOCKS
PRAGMA BLOCK
H 1
CNOT 0 1
H 1
PRAGMA END_BLOCK
PRAGMA BLOCK
H 2
CNOT 1 2
H 2
PRAGMA END_BLOCK
PRAGMA BLOCK
H 1
CNOT 2 1
H 1
PRAGMA END_BLOCK
PRAGMA END_COMMUTING_BLOCKS

# Output
PRAGMA COMMUTING_BLOCKS
PRAGMA BLOCK
H 1
CNOT 0 1
H 1
PRAGMA END_BLOCK
PRAGMA BLOCK
H 2
CNOT 1 2
H 2
PRAGMA END_BLOCK
PRAGMA BLOCK
H 1
CNOT 2 1
H 1
PRAGMA END_BLOCK
PRAGMA END_COMMUTING_BLOCKS

# Input
# Plundered from ../../compiler-hook-test-files/CZs-only.quil
CZ 0 1
CZ 2 3
CZ 1 3
CZ 0 2
CZ 1 2
CZ 0 3

# Output
CZ 0 1
CZ 2 3
CZ 1 3
CZ 0 2
CZ 1 2
CZ 0 3

# Input
# Plundered from ../../compiler-hook-test-files/flush-1Q-gate.quil
RZ(1.0) 1
CZ 0 3
CZ 1 3

# Output
RZ(1.0) 1
CZ 0 3
CZ 1 3

# Input
# Plundered from ../../compiler-hook-test-files/more-commuting-blocks.quil
# this caused a headache on 2019-01-23, where it revealed that lscheduler-clean-up-last-instrs had a bug in it
# when confronted with commuting blocks that shared some qubit resource (0, below) as well as instructions
# before and after it which also used the qubit resource, plus a few other happenstance conditions.

Y 0

PRAGMA COMMUTING_BLOCKS

PRAGMA BLOCK
CPHASE(-4.8) 0 1
PRAGMA END_BLOCK

PRAGMA BLOCK
CNOT 0 3
PRAGMA END_BLOCK

PRAGMA END_COMMUTING_BLOCKS

X 0

# Output
Y 0
PRAGMA COMMUTING_BLOCKS
PRAGMA BLOCK
CPHASE(-4.8) 0 1
PRAGMA END_BLOCK
PRAGMA BLOCK
CNOT 0 3
PRAGMA END_BLOCK
PRAGMA END_COMMUTING_BLOCKS
X 0

# Input
# Plundered from ../../compiler-hook-test-files/parametric-gate.quil
DEFGATE CY(%theta):
    1, 0, 0, 0
    0, 1, 0, 0
    0, 0, cos(%theta), -sin(%theta)
    0, 0, sin(%theta), cos(%theta)

CY(pi/4) 1 0

# Output
DEFGATE CY(%theta):
    1.0, 0.0, 0.0, 0.0
    0.0, 1.0, 0.0, 0.0
    0.0, 0.0, COS(%theta), -(SIN(%theta))
    0.0, 0.0, SIN(%theta), COS(%theta)

CY(pi/4) 1 0

# Input
# Plundered from ../../compiler-hook-test-files/sohaib.quil
DEFGATE U_f:
    1.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    0, 1.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    0, 0, 0, 1.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    0, 0, 1.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    0, 0, 0, 0, 0, 1.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    0, 0, 0, 0, 1.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    0, 0, 0, 0, 0, 0, 1.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    0, 0, 0, 0, 0, 0, 0, 1.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    0, 0, 0, 0, 0, 0, 0, 0, 0, 1.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    0, 0, 0, 0, 0, 0, 0, 0, 1.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.0, 0, 0, 0, 0, 0, 0, 0, 0
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.0, 0, 0, 0, 0, 0, 0, 0
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.0, 0, 0, 0, 0, 0, 0
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.0, 0, 0, 0, 0
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.0, 0, 0, 0, 0, 0
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.0, 0, 0
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.0, 0, 0, 0
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.0, 0
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.0

DECLARE ro BIT[4]
I 1
I 2
I 3
I 4
X 0
H 0
H 1
H 2
H 3
H 4
U_f 4 3 2 1 0
H 1
H 2
H 3
H 4

# Output
DECLARE ro BIT[4]

DEFGATE U_f AS PERMUTATION:
    0, 1, 3, 2, 5, 4, 6, 7, 9, 8, 10, 11, 12, 13, 15, 14, 17, 16, 18, 19, 20, 21, 23, 22, 24, 25, 27, 26, 29, 28, 30, 31

I 1
I 2
I 3
I 4
X 0
H 0
H 1
H 2
H 3
H 4
U_f 4 3 2 1 0
H 1
H 2
H 3
H 4

