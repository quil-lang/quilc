.TH QUILC 1 "24 September 2018" "0.13.0 (cl-quil: 0.19.0) [e9b41e3]"
.SH NAME
quilc \- an optimizing, architecture-independent Quil compiler
.SH SYNOPSIS

quilc <options>

.SH DESCRIPTION
The Rigetti Quil compiler, quilc, is an optimizing compiler for
Quil. It takes a general Quil program along with a qubit architecture,
called an ISA, and produces another Quil program that is executable on
that architecture. The compiler will also attempt to optimize the
program by producing fewer gates and shorter gate depths. The compiler
may either be run as a server which takes requests (as is used with
PyQuil), or it may be run as a batch program reading from (and writing
to) standard input.

Server Mode runs the compiler as an RPC server, taking RPCQ requests
defined by the RPCQ library.
.SH OPTIONS
.IP "-R, -S, --server-mode-rpc"
(Server RPCQ Mode) Run as a RPCQ server.
.IP "-p <port>, --port <port>"
(Server Mode) Run quilc in server mode on port <port>.
.IP "--host <host>"
Host on which to start the server. The default is "*".
.IP "-h, --help"
Show the help message.
.IP "-v, --version"
Show the version.
.IP "--isa <string>"
Compile for the qubit architecture defined by <string>, which can be
either 8Q, 20Q, 16QMUX, bristlecone, ibmqx5, or a path to a QPU
description file.
.IP "-P, --protoquil"
Prescribe that the input and output must be ProtoQuil, which is Quil
that is, in order, comprised of memory declarations, gates, and measurements, with no control flow.
.IP "--print-statistics"
Calculate the statistics of the input program and print them to
standard output. The statistics are: gate depth, two qubit gate depth,
gate volume, runtime, fidelity, unused qubits, and topological
overhead.
.IP "-d, --compute-gate-depth"
(Deprecated. See --print-statistics.) Print a calculated gate depth for
the provided circuit as an appended Quil comment. Gate depth is
defined as the longest subsequence of compiled instructions where
adjacent instructions share data.  (Requires -P.)
.IP "-2, --compute-2Q-gate-depth"
(Deprecated. See --print-statistics.) Print a calculated multiqubit
gate depth for the provided circuit as an appended Quil
comment. (Requires -P. Ignores the blacklist and whitelist.)
.IP "--compute-gate-volume"
(Deprecated. See --print-statistics.) Print a calculated gate volume
for the provided circuit as an appended Quil comment. Gate volume is
defined as the total number of gates in the compiled
program. (Requires -P.)
.IP "-r, --compute-runtime"
(Deprecated. See --print-statistics.) Print a calculated estimated
runtime for the provided circuit as an appended Quil comment. Assumes
that chains of instructions that do have overlapping resources
(qubits) can be run in parallel. Currently, should be taken with a
hefty helping of salt. (Requires -P.)
.IP "-f, --compute-fidelity"
(Deprecated. See --print-statistics.) Print a calculated estimated
compiled circuit fidelity for the provided circuit as an appended Quil
comment. (Requires -P.)
.IP "-u, --compute-unused-qubits"
(Deprecated. See --print-statistics.) Print a list of unused qubits as
an appended Quil comment. (Requires -P.)
.IP "-t, --show-topological-overhead"
(Deprecated. See --print-statistics.) Print the number of SWAP gates
incurred for topological reasons for the provided circuit as an
appended Quil comment. (Requires -P.)
.IP "--gate-blacklist <gate-list>"
When calculating statistics, ignore the gates present in the
comma-separated list of names of <gate-list>.
.IP "--gate-whitelist <gate-list>"
When calculating statistics, consider only the gates present in the
comma-separated list of names of <gate-list>.
.IP "--time-limit <limit-s>"
(Server Mode) Limit the amount of time for a single request to
approximately <limit-s> seconds. By default, this value is 0,
which indicates an unlimited amount of time is allowed.
.IP "--without-pretty-printing"
Disable pretty printing of numerical quantities (e.g., multiples of
pi) in compiled output.
.IP "--prefer-gate-ladders"
Use gate ladders, instead of the SWAP gate, to implement long-ranged
gates, when possible.
.IP "-m, --compute-matrix-reps"
Print and verify the matrix representation of a compiled ProtoQuil
program. Verification is done by checking that the matrix
representation of the output program matches the matrix representation
of the input program. (Requires -P. Note that this is a very expensive
operation.)
.IP "--enable-state-prep-reductions"
Perform program optimizations by assuming that the quantum state
starts in the zero state.
.IP "--log-level"
Set the logging level severity below which logs will not be
produced. The possible levels are: debug, info, notice, warning, err,
crit, alert, emerg. Logs are written to stderr. (Defaults to info.)
.IP "--quiet"
Disable any non-logging output, like the banner.
.IP "--verbose"
Verbose compiler trace output. Peer into the compiler's deepest
thoughts. (Not available on SDK builds.)
.IP "-j, --json-serialize"
Serialize output as JSON. (Not available on SDK builds.)
.IP "-s, --print-logical-schedule"
Include logically parallelized schedule in JSON output; requires
-P. (Not available on SDK builds. Deprecated and disabled.)
.IP "--check-libraries"
Check that required foreign libraries are present and that their
versions are adequate.
.IP "--benchmark"
Run benchmarks and print results.
.IP "--log-level"
Maximum logging level. Any logs with a less sever level will be
ignored. Available options are "debug" (default), "info", "notice", 
"warning", "err", "crit", "alert", or "emerg".

.SH RPCQ
RPCQ is an RPC framework and message specification for Rigetti Quantum
Cloud Services. See https://github.com/rigetti/rpcq for more detail.

.SH SUPPORT
Contact <support@rigetti.com> or Robert Smith <robert@rigetti.com>.
.SH COPYRIGHT
Copyright (c) 2016-2020 Rigetti Computing
.SH SEE ALSO
qvm(1)
